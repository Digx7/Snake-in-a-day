//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/Version Control/Scripts/PlayerActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerActions"",
    ""maps"": [
        {
            ""name"": ""Snake"",
            ""id"": ""89030f3b-7568-4437-9a40-f1339bb74f4c"",
            ""actions"": [
                {
                    ""name"": ""Move_Player_1"",
                    ""type"": ""PassThrough"",
                    ""id"": ""bd10217c-3b60-4068-8f97-fbb9b947ca28"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Move_Player_2"",
                    ""type"": ""PassThrough"",
                    ""id"": ""897d5efd-f839-486b-bc5d-efb3dbddb093"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grow_Player_1"",
                    ""type"": ""Button"",
                    ""id"": ""4926b276-cf4a-4df6-b4b5-5eb2362cb96a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Grow_Player_2"",
                    ""type"": ""Button"",
                    ""id"": ""953d1f51-f9ee-4dba-b4df-7027db373115"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""1a74da74-bcd4-4ca7-a59a-d5e61217ec57"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move_Player_1"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7cbda4ee-4a04-4213-ad7f-e6b3ce57a3ec"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move_Player_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""e1122b5d-7ac6-4092-aaba-d748c3320386"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move_Player_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""87b454c5-1544-47fe-92ef-cf9106ff3adc"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move_Player_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e4eb4676-188b-4475-a059-b7d0de0681c7"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move_Player_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""3fd3aec9-084f-4cb1-86b4-93dedf9c22c8"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move_Player_2"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9b46d7b4-61da-4b7b-a793-872d40be7dfc"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move_Player_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7978a9a1-c10e-444b-aeb8-52aaa6b5c180"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move_Player_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b57b0570-8026-4445-8e1c-38caaedb4dd2"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move_Player_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""85a7abc7-206e-4294-b425-85ee00667d17"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move_Player_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""25cf012c-f6ff-4b7a-9a82-956d48516138"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grow_Player_1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2904f96d-7d16-44b0-830e-df7346cb6045"",
                    ""path"": ""<Keyboard>/rightShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Grow_Player_2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Snake
        m_Snake = asset.FindActionMap("Snake", throwIfNotFound: true);
        m_Snake_Move_Player_1 = m_Snake.FindAction("Move_Player_1", throwIfNotFound: true);
        m_Snake_Move_Player_2 = m_Snake.FindAction("Move_Player_2", throwIfNotFound: true);
        m_Snake_Grow_Player_1 = m_Snake.FindAction("Grow_Player_1", throwIfNotFound: true);
        m_Snake_Grow_Player_2 = m_Snake.FindAction("Grow_Player_2", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Snake
    private readonly InputActionMap m_Snake;
    private List<ISnakeActions> m_SnakeActionsCallbackInterfaces = new List<ISnakeActions>();
    private readonly InputAction m_Snake_Move_Player_1;
    private readonly InputAction m_Snake_Move_Player_2;
    private readonly InputAction m_Snake_Grow_Player_1;
    private readonly InputAction m_Snake_Grow_Player_2;
    public struct SnakeActions
    {
        private @PlayerActions m_Wrapper;
        public SnakeActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move_Player_1 => m_Wrapper.m_Snake_Move_Player_1;
        public InputAction @Move_Player_2 => m_Wrapper.m_Snake_Move_Player_2;
        public InputAction @Grow_Player_1 => m_Wrapper.m_Snake_Grow_Player_1;
        public InputAction @Grow_Player_2 => m_Wrapper.m_Snake_Grow_Player_2;
        public InputActionMap Get() { return m_Wrapper.m_Snake; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SnakeActions set) { return set.Get(); }
        public void AddCallbacks(ISnakeActions instance)
        {
            if (instance == null || m_Wrapper.m_SnakeActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_SnakeActionsCallbackInterfaces.Add(instance);
            @Move_Player_1.started += instance.OnMove_Player_1;
            @Move_Player_1.performed += instance.OnMove_Player_1;
            @Move_Player_1.canceled += instance.OnMove_Player_1;
            @Move_Player_2.started += instance.OnMove_Player_2;
            @Move_Player_2.performed += instance.OnMove_Player_2;
            @Move_Player_2.canceled += instance.OnMove_Player_2;
            @Grow_Player_1.started += instance.OnGrow_Player_1;
            @Grow_Player_1.performed += instance.OnGrow_Player_1;
            @Grow_Player_1.canceled += instance.OnGrow_Player_1;
            @Grow_Player_2.started += instance.OnGrow_Player_2;
            @Grow_Player_2.performed += instance.OnGrow_Player_2;
            @Grow_Player_2.canceled += instance.OnGrow_Player_2;
        }

        private void UnregisterCallbacks(ISnakeActions instance)
        {
            @Move_Player_1.started -= instance.OnMove_Player_1;
            @Move_Player_1.performed -= instance.OnMove_Player_1;
            @Move_Player_1.canceled -= instance.OnMove_Player_1;
            @Move_Player_2.started -= instance.OnMove_Player_2;
            @Move_Player_2.performed -= instance.OnMove_Player_2;
            @Move_Player_2.canceled -= instance.OnMove_Player_2;
            @Grow_Player_1.started -= instance.OnGrow_Player_1;
            @Grow_Player_1.performed -= instance.OnGrow_Player_1;
            @Grow_Player_1.canceled -= instance.OnGrow_Player_1;
            @Grow_Player_2.started -= instance.OnGrow_Player_2;
            @Grow_Player_2.performed -= instance.OnGrow_Player_2;
            @Grow_Player_2.canceled -= instance.OnGrow_Player_2;
        }

        public void RemoveCallbacks(ISnakeActions instance)
        {
            if (m_Wrapper.m_SnakeActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ISnakeActions instance)
        {
            foreach (var item in m_Wrapper.m_SnakeActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_SnakeActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public SnakeActions @Snake => new SnakeActions(this);
    public interface ISnakeActions
    {
        void OnMove_Player_1(InputAction.CallbackContext context);
        void OnMove_Player_2(InputAction.CallbackContext context);
        void OnGrow_Player_1(InputAction.CallbackContext context);
        void OnGrow_Player_2(InputAction.CallbackContext context);
    }
}
